version: '3'
services:
    ui:
        container_name: "corp-hq-ui"
        image: node:9
        working_dir: /app
        volumes:
            - ./app/ui:/app
        command: bash -c "npm install; npm run dev-docker"
    api:
        container_name: "corp-hq-api"
        image: microsoft/dotnet:2.1-sdk
        environment:
            - MONGO_CONNECTION=mongodb://mongo:27017/corp-hq
        volumes:
            - .:/var/host-src:ro
            - api:/var/src
        working_dir: /var/src
        links:
            - "mongodb:mongo"
            - "rabbitmq:rabbit"
        command: bash -c "/var/host-src/docker-compose-files/quickstart-deploy.sh api /var/host-src /var/src"
    runner:
        container_name: "corp-hq-runner"
        image: microsoft/dotnet:2.1-sdk
        environment:
            - MONGO_CONNECTION=mongodb://mongo:27017/corp-hq
        volumes:
            - .:/var/host-src:ro
            - runner1:/var/src
        working_dir: /var/src
        links:
            - "mongodb:mongo"
            - "rabbitmq:rabbit"
        command: bash -c "/var/host-src/docker-compose-files/quickstart-deploy.sh runner /var/host-src /var/src"
    runner2:
        container_name: "corp-hq-runner-2"
        image: microsoft/dotnet:2.1-sdk
        environment:
            - MONGO_CONNECTION=mongodb://mongo:27017/corp-hq
        volumes:
            - .:/var/host-src:ro
            - runner2:/var/src
        working_dir: /var/src
        links:
            - "mongodb:mongo"
            - "rabbitmq:rabbit"
        command: bash -c "/var/host-src/docker-compose-files/quickstart-deploy.sh runner /var/host-src /var/src"
    manager:
        container_name: "corp-hq-manager"
        image: microsoft/dotnet:2.1-sdk
        environment:
            - MONGO_CONNECTION=mongodb://mongo:27017/corp-hq
        volumes:
            - .:/var/host-src:ro
            - manager:/var/src
        working_dir: /var/src
        links:
            - "mongodb:mongo"
            - "rabbitmq:rabbit"
        command: bash -c "/var/host-src/docker-compose-files/quickstart-deploy.sh manager /var/host-src /var/src"
    mongodb:
        container_name: "mongodb"
        image: mongo:3.6.3
        environment:
            - MONGO_DATA_DIR=/data/db
            - MONGO_LOG_DIR=/dev/null
        volumes:
            - ./mongo-data/db:/data/db
            - ./mongo-scripts:/var/scripts
        ports:
            - 27017:27017
        command: mongod --smallfiles --logpath=/dev/null  # -auth  # --quiet
    eve-api:
        container_name: "eve-api"
        image: node:8
        volumes:
            - ./tests/mock-services/eve-api:/var/mock-scripts
        working_dir: /var/mock-scripts
        ports:
            - 3000:3000
        command: bash -c "npm install; node server.js"
    rabbitmq:
        container_name: "rabbitmq"
        image: rabbitmq:3.7.4-management-alpine
        hostname: "rabbitmq"
        environment:
            RABBITMQ_ERLANG_COOKIE: "SWQOKODSQALRPCLNMEQG"
            RABBITMQ_DEFAULT_USER: "rabbitmq"
            RABBITMQ_DEFAULT_PASS: "rabbitmq"
            RABBITMQ_DEFAULT_VHOST: "/"
        volumes:
            - ./docker-compose-files/rabbitmq/enabled_plugins:/etc/rabbitmq/enabled_plugins
        ports:
            - 15672:15672
            - 5672:5672
        labels:
            NAME: "rabbitmq1"
    proxy:
        container_name: "proxy"
        image: nginx:alpine
        volumes:
            - ./docker-compose-files/nginx-files/nginx.conf:/etc/nginx/nginx.conf
        ports:
            - 80:80
        links:
            - api:corp-hq-api
            - ui:corp-hq-ui

volumes:
    api:
    runner1:
    runner2:
    manager: